Features
[X] Add host IP aws config (usePublicUrlForCxEngine, usePrivateUrlForSpinUp)
[X] Leave engines running until expiration time
[X] Check registered engines, unregister idle dyn engines
[X] Block engine after scan is working
[X] Add engine pool config
[X] Add max concurrent scans
[X] Handle no available engines
[X] Add property (password) encryption
[X] Add engine launch/terminate scripting hooks (JSR-223)
[X] Factor EnginePool out of AwsEngineConfig
[X] Add SSL support, support self-signed certs
[X] Support CxSAST v8.6
[X] Add ec2 post launch script
[X] Add scanid tag to aws engine server
[X] Populate active scan map from running engines
[X] Refactor EngineService/EngineMonitor class structure
[X] Test NumberOfPromotableScans = 0 (Engine config)
[ ] Support token auth
[ ] Pool level termination option - stop set at pool level
[ ] Add minimum provisioned engines
[ ] Move cx credentials out of CxConfig
[ ] Add command for creating encrypted values
[ ] Add AWS credentials
[ ] Clean up unit tests (remove environment dependencies)
[ ] Add concurrent scans per engine
[ ] Clean up logging
[ ] Refactor EnginePool/DynamicEngine state machine
[ ] **Refactor EnginePool to include pool queue
[ ] **Add scriptable EnginePool match criteria

Fixed
[X] Handle Cx session timeout
[X] AWS Describe instance failure causes scan lost - add retry 
[X] ScanRequest dates may fail unmarshalling if they don't contain 3 millisec digits
[X] Nullpointer during blocking - think due to v8.6 EngineState change
[X] Ping engine during provisioning won't exit if app stopped
[ ] Disk encryption caused launch failure - what does AWS return?
[ ] cxManagerURL is logged incorrectly
[ ] Launching multiple scans on startup, exceeds limits
[ ] Nullpointer when cancel scan from CxPortal


RANDY
[X] Pull out EnginePool config
[X] Add external spring config for multiple EngineProvisioners
[X] Modularlize EngineProvisioners
[X] Scaffold VmwareProvisioner (separate module)

SERGIO
[X] Define and implement VmwareConfig
[X] Implement VmwareProvisioner

MOVE SALES
[ ] Check on IAM Role based AWS authentication
[X] Support static engines
[ ] Support minimum running engines
[X] Restarting DynEngine with engine actively scanning
     - Check how expiration is handled for existing eng
     
CxMS
[ ] Test start/stop times for large instances
[ ] Allow start/stop not terminate on pool basis (m5 - 50s)
[X] Check logic when launching engine times out - should terminate old, launch new engine
